/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { SCENE_MODEL_URL } from '../Constants.ts'

type GLTFResult = GLTF & {
  nodes: {
    Cube004: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

// @ ts-expect-error -- props: JSX.IntrinsicElements['group']
export default function SceneModel(props: any) {
  const { nodes, materials } = useGLTF(SCENE_MODEL_URL) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={materials['Material.001']}
        position={[7.679, -5.593, 26.377]}
        scale={0.6}
      />
    </group>
  )
}

useGLTF.preload(SCENE_MODEL_URL)
