# import { useMutation, gql } from '@apollo/client'

# const UpdatePreferences = gql`
mutation UpdatePreferences ( 
    $id: ID!
    $title: String! 
    $content: String!
    $status: String!
    $version: String!
    # $doAutoLoadData: Boolean
    # $doAutoRotate: Boolean
    # $projectName: String
    # $environmentPreset: String
    # $environmentBgBlur: Float
    # $characterTrailColor: String
    # $doCharacterAnimation: Boolean
    # $doWorldDebug: Boolean
    # $doWorldTesting: Boolean
    # $doWorldPhysics: Boolean
    # $doWorldControl: Boolean
    # $doWorldUnfollowCam: Boolean
    # $showPanelFirst: Boolean
    # $showPanelLast: Boolean
){
  updatePreferences(input: {
    id: $id
    title: $title
    content: $content
    status: $status
    version: $version
    # doAutoLoadData: $doAutoLoadData
    # doAutoRotate: $doAutoRotate
    # projectName: $projectName
    # environmentPreset: $environmentPreset
    # environmentBgBlur: $environmentBgBlur
    # characterTrailColor: $characterTrailColor
    # doCharacterAnimation: $doCharacterAnimation
    # doWorldDebug: $doWorldDebug
    # doWorldTesting: $doWorldTesting
    # doWorldPhysics: $doWorldPhysics
    # doWorldControl: $doWorldControl
    # doWorldUnfollowCam: $doWorldUnfollowCam
    # showPanelFirst: $showPanelFirst
    # showPanelLast: $showPanelLast
  }) {
    preferences {
      preferencesId
      title
      content
      status
      link
      modified
      owner {
        node {
          userId
          userType
          username
          state
          version
        }
      }
      version
      doAutoLoadData
      doAutoRotate
      projectName
      environmentPreset
      environmentBgBlur
      characterTrailColor
      doCharacterAnimation
      doWorldDebug
      doWorldTesting
      doWorldPhysics
      doWorldControl
      doWorldUnfollowCam
      showPanelFirst
      showPanelLast
    }
  }
}# `
